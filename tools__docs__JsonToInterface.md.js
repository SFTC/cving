(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[37,36],{"7Hnl":function(e,n,t){"use strict";t.r(n);t("+L6B");var a=t("2/Rp"),l=(t("DYRE"),t("zeV3")),i=(t("OaEy"),t("2fM7")),r=(t("cIOH"),t("czTT"),t("pVnL")),d=t.n(r),c=t("lSNA"),o=t.n(c),s=t("q1tI"),m=t.n(s),u=t("rePB"),f=t("ODXe"),p=t("Ff2n"),y=t("TSYQ"),v=t.n(y),h=t("6cGi"),g=t("4IlW"),b=s["forwardRef"]((function(e,n){var t,a=e.prefixCls,l=void 0===a?"rc-switch":a,i=e.className,r=e.checked,d=e.defaultChecked,c=e.disabled,o=e.loadingIcon,m=e.checkedChildren,y=e.unCheckedChildren,b=e.onClick,I=e.onChange,F=e.onKeyDown,O=Object(p["a"])(e,["prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown"]),S=Object(h["a"])(!1,{value:r,defaultValue:d}),E=Object(f["a"])(S,2),x=E[0],w=E[1];function C(e,n){var t=x;return c||(t=e,w(t),null===I||void 0===I||I(t,n)),t}function N(e){e.which===g["a"].LEFT?C(!1,e):e.which===g["a"].RIGHT&&C(!0,e),null===F||void 0===F||F(e)}function k(e){var n=C(!x,e);null===b||void 0===b||b(n,e)}var K=v()(l,i,(t={},Object(u["a"])(t,"".concat(l,"-checked"),x),Object(u["a"])(t,"".concat(l,"-disabled"),c),t));return s["createElement"]("button",Object.assign({},O,{type:"button",role:"switch","aria-checked":x,disabled:c,className:K,ref:n,onKeyDown:N,onClick:k}),o,s["createElement"]("span",{className:"".concat(l,"-inner")},x?m:y))}));b.displayName="Switch";var I=b,F=t("gZBC"),O=t.n(F),S=t("g0mS"),E=t("H84U"),x=t("3Nzz"),w=t("uaoM"),C=function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var l=0;for(a=Object.getOwnPropertySymbols(e);l<a.length;l++)n.indexOf(a[l])<0&&Object.prototype.propertyIsEnumerable.call(e,a[l])&&(t[a[l]]=e[a[l]])}return t},N=s["forwardRef"]((function(e,n){var t,a=e.prefixCls,l=e.size,i=e.loading,r=e.className,c=void 0===r?"":r,m=e.disabled,u=C(e,["prefixCls","size","loading","className","disabled"]);Object(w["a"])("checked"in u||!("value"in u),"Switch","`value` is not a valid prop, do you mean `checked`?");var f=s["useContext"](E["b"]),p=f.getPrefixCls,y=f.direction,h=s["useContext"](x["b"]),g=p("switch",a),b=s["createElement"]("div",{className:"".concat(g,"-handle")},i&&s["createElement"](O.a,{className:"".concat(g,"-loading-icon")})),F=v()((t={},o()(t,"".concat(g,"-small"),"small"===(l||h)),o()(t,"".concat(g,"-loading"),i),o()(t,"".concat(g,"-rtl"),"rtl"===y),t),c);return s["createElement"](S["a"],{insertExtraNode:!0},s["createElement"](I,d()({},u,{prefixCls:g,className:F,disabled:m||i,ref:n,loadingIcon:b})))}));N.__ANT_SWITCH=!0,N.displayName="Switch";var k=N,K=t("0Owb"),j=(t("y8nQ"),t("Vl3Y")),q=(t("5NDa"),t("5rEg")),T=t("tJVT"),B={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M696 480H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8z"}},{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}}]},name:"minus-circle",theme:"outlined"},R=B,z=t("6VBw"),P=function(e,n){return s["createElement"](z["a"],Object.assign({},e,{ref:n,icon:R}))};P.displayName="MinusCircleOutlined";var M=s["forwardRef"](P),$=t("xvlK"),_=t("Vlae"),D=t.n(_),V=()=>{var e=Object(s["useState"])(""),n=Object(T["a"])(e,2),t=n[0],r=n[1],d=e=>{console.log("values ---\x3e ",e);var n=e.fields.map(e=>["/** ".concat(e.desc," */"),"".concat(e.fieldName).concat(e.isRequired?"":"?",": ").concat(e.dataType,";")].join("\n")),t="\nexport interface ".concat(e.name||"Object"," {\n  ").concat(n.join("\n"),"\n}\n    ");r(t)};return m.a.createElement(s["Fragment"],null,m.a.createElement(j["a"],{name:"basic",onFinish:d,autoComplete:"off"},m.a.createElement(j["a"].Item,{name:"name"},m.a.createElement(q["a"],{placeholder:"\u8bf7\u8f93\u5165\u63a5\u53e3\u540d\u79f0"})),m.a.createElement(j["a"].List,{name:"fields"},(e,n)=>{var t=n.add,r=n.remove;return m.a.createElement("div",null,e.map(e=>m.a.createElement(l["b"],{key:e.key,style:{display:"flex",marginBottom:8},align:"start"},m.a.createElement(j["a"].Item,Object(K["a"])({},e,{name:[e.name,"fieldName"],fieldKey:[e.fieldKey,"fieldName"],rules:[{required:!0,message:"\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d"}]}),m.a.createElement(q["a"],{placeholder:"\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d"})),m.a.createElement(j["a"].Item,Object(K["a"])({},e,{name:[e.name,"isRequired"],fieldKey:[e.fieldKey,"isRequired"],valuePropName:"checked"}),m.a.createElement(k,null)),m.a.createElement(j["a"].Item,Object(K["a"])({},e,{name:[e.name,"dataType"],fieldKey:[e.fieldKey,"dataType"]}),m.a.createElement(i["a"],null,m.a.createElement(i["a"].Option,{value:"string"},"string"),m.a.createElement(i["a"].Option,{value:"number"},"number"))),m.a.createElement(j["a"].Item,Object(K["a"])({},e,{name:[e.name,"desc"],fieldKey:[e.fieldKey,"desc"],rules:[{required:!0,message:"\u8bf7\u8f93\u5165\u6ce8\u91ca"}]}),m.a.createElement(q["a"],{placeholder:"\u8bf7\u8f93\u5165\u6ce8\u91ca"})),m.a.createElement(M,{style:{fontSize:"24px"},onClick:()=>{r(e.name)}}))),m.a.createElement(j["a"].Item,null,m.a.createElement(a["a"],{type:"dashed",onClick:()=>{t({isRequired:"1",dataType:"string"})},block:!0},m.a.createElement($["a"],null)," Add field")))}),m.a.createElement(j["a"].Item,null,m.a.createElement(a["a"],{type:"primary",htmlType:"submit"},"Submit"))),m.a.createElement("div",{className:D.a["result-content"]},t))};n["default"]=()=>m.a.createElement("div",{className:D.a.container},m.a.createElement(V,null))},"K+nK":function(e,n){function t(e){return e&&e.__esModule?e:{default:e}}e.exports=t},UVwS:function(e,n,t){"use strict";t.r(n);var a=t("0Owb"),l=t("q1tI"),i=t.n(l),r=(t("B2uJ"),t("+su7"),t("qOys"),t("5Yjd")),d=t.n(r),c=i.a.memo((function(){var e=t("K+nK"),n=e(t("q1tI")),a=e(t("7Hnl")),l=function(){return n.default.createElement(a.default,null)};return n["default"].createElement(l)}));n["default"]=function(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",{className:"markdown"}),i.a.createElement(d.a,Object(a["a"])({source:{tsx:"import React, { useState, Fragment } from 'react';\nimport { Form, Input, Button, Space, Select, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport styles from './index.less';\n\nconst Demo = () => {\n  const [inter, setInter] = useState('');\n\n  const onFinish = (values: any) => {\n    console.log('values ---\x3e ', values);\n    const fieldStrArr = values.fields.map((field: any) => {\n      return [\n        `/** ${field.desc} */`,\n        `${field.fieldName}${field.isRequired ? '' : '?'}: ${field.dataType};`,\n      ].join('\\n');\n    });\n    const result = `\nexport interface ${values.name || 'Object'} {\n  ${fieldStrArr.join('\\n')}\n}\n    `;\n    setInter(result);\n  };\n\n  return (\n    <Fragment>\n      <Form name=\"basic\" onFinish={onFinish} autoComplete=\"off\">\n        <Form.Item name=\"name\">\n          <Input placeholder=\"\u8bf7\u8f93\u5165\u63a5\u53e3\u540d\u79f0\" />\n        </Form.Item>\n        <Form.List name=\"fields\">\n          {(fields, { add, remove }) => (\n            <div>\n              {fields.map(field => (\n                <Space\n                  key={field.key}\n                  style={{ display: 'flex', marginBottom: 8 }}\n                  align=\"start\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'fieldName']}\n                    fieldKey={[field.fieldKey, 'fieldName']}\n                    rules={[{ required: true, message: '\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d' }]}\n                  >\n                    <Input placeholder=\"\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'isRequired']}\n                    fieldKey={[field.fieldKey, 'isRequired']}\n                    valuePropName=\"checked\"\n                  >\n                    <Switch />\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'dataType']}\n                    fieldKey={[field.fieldKey, 'dataType']}\n                  >\n                    <Select>\n                      <Select.Option value=\"string\">string</Select.Option>\n                      <Select.Option value=\"number\">number</Select.Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'desc']}\n                    fieldKey={[field.fieldKey, 'desc']}\n                    rules={[{ required: true, message: '\u8bf7\u8f93\u5165\u6ce8\u91ca' }]}\n                  >\n                    <Input placeholder=\"\u8bf7\u8f93\u5165\u6ce8\u91ca\" />\n                  </Form.Item>\n\n                  <MinusCircleOutlined\n                    style={{ fontSize: '24px' }}\n                    onClick={() => {\n                      remove(field.name);\n                    }}\n                  />\n                </Space>\n              ))}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => {\n                    add({\n                      isRequired: '1',\n                      dataType: 'string',\n                    });\n                  }}\n                  block\n                >\n                  <PlusOutlined /> Add field\n                </Button>\n              </Form.Item>\n            </div>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <div className={styles['result-content']}>{inter}</div>\n    </Fragment>\n  );\n};\n\nexport default () => {\n  return (\n    <div className={styles.container}>\n      <Demo />\n    </div>\n  );\n};\n",jsx:"import React, { useState, Fragment } from 'react';\nimport { Form, Input, Button, Space, Select, Switch } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport styles from './index.less';\n\nconst Demo = () => {\n  const [inter, setInter] = useState('');\n\n  const onFinish = values => {\n    console.log('values ---\x3e ', values);\n    const fieldStrArr = values.fields.map(field =>\n      [\n        `/** ${field.desc} */`,\n        `${field.fieldName}${field.isRequired ? '' : '?'}: ${field.dataType};`,\n      ].join('\\n'),\n    );\n    const result = `\nexport interface ${values.name || 'Object'} {\n  ${fieldStrArr.join('\\n')}\n}\n    `;\n    setInter(result);\n  };\n\n  return (\n    <Fragment>\n      <Form name=\"basic\" onFinish={onFinish} autoComplete=\"off\">\n        <Form.Item name=\"name\">\n          <Input placeholder=\"\u8bf7\u8f93\u5165\u63a5\u53e3\u540d\u79f0\" />\n        </Form.Item>\n        <Form.List name=\"fields\">\n          {(fields, { add, remove }) => (\n            <div>\n              {fields.map(field => (\n                <Space\n                  key={field.key}\n                  style={{\n                    display: 'flex',\n                    marginBottom: 8,\n                  }}\n                  align=\"start\"\n                >\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'fieldName']}\n                    fieldKey={[field.fieldKey, 'fieldName']}\n                    rules={[\n                      {\n                        required: true,\n                        message: '\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d',\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"\u8bf7\u8f93\u5165\u5b57\u6bb5\u540d\" />\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'isRequired']}\n                    fieldKey={[field.fieldKey, 'isRequired']}\n                    valuePropName=\"checked\"\n                  >\n                    <Switch />\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'dataType']}\n                    fieldKey={[field.fieldKey, 'dataType']}\n                  >\n                    <Select>\n                      <Select.Option value=\"string\">string</Select.Option>\n                      <Select.Option value=\"number\">number</Select.Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item\n                    {...field}\n                    name={[field.name, 'desc']}\n                    fieldKey={[field.fieldKey, 'desc']}\n                    rules={[\n                      {\n                        required: true,\n                        message: '\u8bf7\u8f93\u5165\u6ce8\u91ca',\n                      },\n                    ]}\n                  >\n                    <Input placeholder=\"\u8bf7\u8f93\u5165\u6ce8\u91ca\" />\n                  </Form.Item>\n\n                  <MinusCircleOutlined\n                    style={{\n                      fontSize: '24px',\n                    }}\n                    onClick={() => {\n                      remove(field.name);\n                    }}\n                  />\n                </Space>\n              ))}\n\n              <Form.Item>\n                <Button\n                  type=\"dashed\"\n                  onClick={() => {\n                    add({\n                      isRequired: '1',\n                      dataType: 'string',\n                    });\n                  }}\n                  block\n                >\n                  <PlusOutlined /> Add field\n                </Button>\n              </Form.Item>\n            </div>\n          )}\n        </Form.List>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <div className={styles['result-content']}>{inter}</div>\n    </Fragment>\n  );\n};\n\nexport default () => (\n  <div className={styles.container}>\n    <Demo />\n  </div>\n);\n"}},{inline:!0,path:"/_demos/index",CSSInDependencies:["antd/dist/antd.css"],dependencies:{antd:"4.6.3","@ant-design/icons":"4.2.2"},files:{"index.less":{path:"./index.less",content:".container {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 200px;\n}\n\n.result-content {\n  white-space: pre-wrap;\n  padding: 20px;\n  border: 1px solid #888;\n}\n"}}}),i.a.createElement(c,null)))}},Vlae:function(e,n,t){e.exports={container:"container___J89gM","result-content":"result-content___a67Pd"}},czTT:function(e,n,t){},xvlK:function(e,n,t){"use strict";var a=t("q1tI"),l={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"defs",attrs:{},children:[{tag:"style",attrs:{}}]},{tag:"path",attrs:{d:"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z"}},{tag:"path",attrs:{d:"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z"}}]},name:"plus",theme:"outlined"},i=l,r=t("6VBw"),d=function(e,n){return a["createElement"](r["a"],Object.assign({},e,{ref:n,icon:i}))};d.displayName="PlusOutlined";n["a"]=a["forwardRef"](d)}}]);